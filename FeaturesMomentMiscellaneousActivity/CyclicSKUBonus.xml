<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="b486abbf-86fc-474e-b4e7-602b8e3fa011" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="CyclicSKUBonus" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="b486abbf-86fc-474e-b4e7-602b8e3fa011fileName">CyclicSKUBonus</con:setting>
  </con:settings>
  <con:testStep type="calltestcase" name="EnableOrDisableProgramSetting" id="28f401d2-d196-4a93-b77f-c5b8fad9518c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>58358ab6-63cb-4437-8821-6fda8375ad78</con:targetTestCase>
      <con:properties/>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="GetEventAttributeByEventNameForPurchaseTxn" id="43b0076c-38f5-4bc4-bda3-528f5622ff92">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>230eccdb-787c-4606-82be-23ffb3a4fc89</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>eventType</con:name>
          <con:value>PurchaseTxn</con:value>
        </con:property>
        <con:property>
          <con:name>QtyEventAttributeId</con:name>
          <con:value>c2151ab3-6151-4bdd-9912-4dcda83ac7fb</con:value>
        </con:property>
        <con:property>
          <con:name>QtyEventParentAttributeId</con:name>
          <con:value>f6a425ee-5ba7-4d3b-9a53-611a5327aeba</con:value>
        </con:property>
        <con:property>
          <con:name>BonusIssueCountEventAttributeId</con:name>
          <con:value>db68ebed-6ada-4c50-b34d-0a3213e257d9</con:value>
        </con:property>
        <con:property>
          <con:name>BonusIssueCountEventParentAttributeId</con:name>
          <con:value>9994e450-0cca-416f-b9aa-327aad9c8cce</con:value>
        </con:property>
        <con:property>
          <con:name>PointLifeTimeEventAttributeId</con:name>
          <con:value>15af5ad0-76d2-4e6f-ab26-874277540b54</con:value>
        </con:property>
        <con:property>
          <con:name>PointLifeTimeEventParentAttributeId</con:name>
          <con:value>9994e450-0cca-416f-b9aa-327aad9c8cce</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>eventType</con:entry>
        <con:entry>QtyEventAttributeId</con:entry>
        <con:entry>QtyEventParentAttributeId</con:entry>
        <con:entry>BonusIssueCountEventAttributeId</con:entry>
        <con:entry>BonusIssueCountEventParentAttributeId</con:entry>
        <con:entry>PointLifeTimeEventAttributeId</con:entry>
        <con:entry>PointLifeTimeEventParentAttributeId</con:entry>
      </con:returnProperties>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="UpdateEventAttributeByEventName(Qty)" id="7e253175-cdaa-483c-bdd7-8db369aa7327">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>33f04b4e-2934-4aa1-98a3-c5bc1e614336</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>eventName</con:name>
          <con:value>PurchaseTxn</con:value>
        </con:property>
        <con:property>
          <con:name>attributeName</con:name>
          <con:value>Quantity</con:value>
        </con:property>
        <con:property>
          <con:name>JsonBody</con:name>
          <con:value>{   "EventAttributeId": "${GetEventAttributeByEventNameForPurchaseTxn#QtyEventAttributeId}",   "ParentAttributeId": "${GetEventAttributeByEventNameForPurchaseTxn#QtyEventParentAttributeId}",   "AttributeName": "Quantity",   "CyclicIndicator": true,   "CapIndicator": false,   "CyclicMapField": "LineItemQuantity",   "IsLineItem": false,   "CollectionIndicator": false,   "DataTypeDrl": "Double",   "DataTypeUi": "Number",   "EventType": "PurchaseTxn",   "AttributeFqn": "PurchaseTxn.TransactionDetails.Quantity",   "DroolsVariableName": "$PurchaseTxnTransactionDetails",   "CollectionAttribute": true,   "UsedAsCyclic": false,   "ReturnAttribute": false,   "IsValueGroupHierarchy": false,   "IsEnrichmentLinkedAttribute": false,   "IsEnrichmentAttribute": false,   "Status": "A"    }</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="UpdateEventAttributeByEventName(BonusIssueCount)" id="47fc45f7-adb9-4481-b234-8b314b2a1bbb">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>33f04b4e-2934-4aa1-98a3-c5bc1e614336</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>eventName</con:name>
          <con:value>PurchaseTxn</con:value>
        </con:property>
        <con:property>
          <con:name>attributeName</con:name>
          <con:value>BonusIssuedCount</con:value>
        </con:property>
        <con:property>
          <con:name>JsonBody</con:name>
          <con:value>{     "EventAttributeId": "${GetEventAttributeByEventNameForPurchaseTxn#BonusIssueCountEventAttributeId}",   "ParentAttributeId": "${GetEventAttributeByEventNameForPurchaseTxn#BonusIssueCountEventParentAttributeId}",   "AttributeName": "BonusIssuedCount",   "CyclicIndicator": false,   "CapIndicator": true,   "IsLineItem": false,   "CollectionIndicator": false,   "DataTypeDrl": "Double",   "DataTypeUi": "Number",   "EventType": "PurchaseTxn",   "AttributeFqn": "PurchaseTxn.CyclicsAndCaps.Caps.BonusIssuedCount",   "DroolsVariableName": "$PurchaseTxnCyclicsAndCaps",   "CapType": "OUTCOMEISSUED",   "CollectionAttribute": false,   "UsedAsCyclic": false,   "ReturnAttribute": false,   "IsValueGroupHierarchy": false,   "IsEnrichmentLinkedAttribute": false,   "IsEnrichmentAttribute": false,   "Status": "A",   }</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="UpdateEventAttributeByEventName(PointLifeTime)" id="384b5bf1-568e-43bb-98a4-2e1b5681a655">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>33f04b4e-2934-4aa1-98a3-c5bc1e614336</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>eventName</con:name>
          <con:value>PurchaseTxn</con:value>
        </con:property>
        <con:property>
          <con:name>attributeName</con:name>
          <con:value>PointsLifetime</con:value>
        </con:property>
        <con:property>
          <con:name>JsonBody</con:name>
          <con:value>{   "EventAttributeId": "${GetEventAttributeByEventNameForPurchaseTxn#PointLifeTimeEventAttributeId}",   "ParentAttributeId": "${GetEventAttributeByEventNameForPurchaseTxn#BonusIssueCountEventParentAttributeId}",   "AttributeName": "PointsLifetime",   "ValueGroup": "AGGREGATE",   "LevelNumber": 11,   "CyclicIndicator": false,   "CapIndicator": true,   "IsLineItem": false,   "CollectionIndicator": false,   "DataTypeDrl": "Double",   "DataTypeUi": "Number",   "EventType": "PurchaseTxn",   "AttributeFqn": "PurchaseTxn.CyclicsAndCaps.Caps.PointsLifetime",   "DroolsVariableName": "$PurchaseTxnCyclicsAndCaps",   "CapType": "OUTCOMERESULT",   "CollectionAttribute": false,   "UsedAsCyclic": false,   "ReturnAttribute": false,   "IsValueGroupHierarchy": false,   "IsEnrichmentLinkedAttribute": false,   "IsEnrichmentAttribute": false,   "Status": "A" }</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="GetPointAndSubPointType" id="6d26659d-7131-4ef8-aaa3-c4c66b18d078">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>3c8dc93b-cef5-4586-8b89-819d8b4ef5b9</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>PointsId</con:name>
          <con:value>25774608-8fc9-48dd-b0f0-027465bec080</con:value>
        </con:property>
        <con:property>
          <con:name>EggsId</con:name>
          <con:value>2e5af117-9e6b-4869-a7b1-af1b7ed1d7ab</con:value>
        </con:property>
        <con:property>
          <con:name>StdPointsId</con:name>
          <con:value>e2608366-3e6c-40f3-b304-534d0a222a99</con:value>
        </con:property>
        <con:property>
          <con:name>PromoPointsId</con:name>
          <con:value>31ee7bda-74a7-48b3-a967-f8a10a170877</con:value>
        </con:property>
        <con:property>
          <con:name>HatchedEggsId</con:name>
          <con:value>128c2ae6-20d2-45ec-9dcb-e421a98c79eb</con:value>
        </con:property>
        <con:property>
          <con:name>UnhatchedEggsId</con:name>
          <con:value>875f14dc-609b-4ec2-9a6d-214bf22847b9</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>PointsId</con:entry>
        <con:entry>EggsId</con:entry>
        <con:entry>StdPointsId</con:entry>
        <con:entry>PromoPointsId</con:entry>
        <con:entry>HatchedEggsId</con:entry>
        <con:entry>UnhatchedEggsId</con:entry>
      </con:returnProperties>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="UpsertMomentForRewCert" id="8cc7a2ba-3536-4aa5-b836-28ded619c094">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>58a85117-5558-4be0-b68f-214c9fbde4c3</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>MomentName</con:name>
          <con:value>RGRCYCLICSKUMINQTY5</con:value>
        </con:property>
        <con:property>
          <con:name>CreateBody</con:name>
          <con:value><![CDATA[{   "Description": "SKU WITH QTY OF 5",   "MomentCode": "${UpsertMomentForRewCert#MomentName}",   "MomentResponseValues": [     {       "MomentCode": "${UpsertMomentForRewCert#MomentName}",       "MomentType": "PROMOTIONAL_CURRENCY",       "ResponsePropertyName": "BASE INDICATOR",       "ResponsePropertyValue": "N",       "Status": "P"     },     {       "MomentCode": "${UpsertMomentForRewCert#MomentName}",       "MomentType": "PROMOTIONAL_CURRENCY",       "ResponsePropertyName": "POINT SUBTYPE",       "ResponsePropertyValue": "${GetPointAndSubPointType#HatchedEggsId}",       "Status": "P"     },     {       "MomentCode": "${UpsertMomentForRewCert#MomentName}",       "MomentType": "PROMOTIONAL_CURRENCY",       "ResponsePropertyName": "POINT TYPE",       "ResponsePropertyValue": "${GetPointAndSubPointType#EggsId}",       "Status": "P"     }   ],   "MomentType": "PROMOTIONAL_CURRENCY",   "StartDate": "2018-07-01T00:00:00Z",   "StartDateString": "07/01/2018 12:00:00 AM",   "EndDate": "2030-07-31T23:59:59Z",   "EndDateString": "07/31/2030 11:59:59 PM",   "MomentStatus": "A",   "MomentEvent": {     "MomentCode": "${UpsertMomentForRewCert#MomentName}",     "EventType": "PurchaseTxn",     "MomentEventId": null,     "MomentQualifyingDateAttribute": "CurrentDateTime",     "MomentQualifyingDateAttributeDrools": "$PurchaseTxn:PurchaseTxnC(IsItBetween( new Date() ,\"7/1/2018 12:00:00 AM\",\"7/31/2020 11:59:59 PM\"))",     "MomentOffers": [       {         "MomentCode": "${UpsertMomentForRewCert#MomentName}",         "EventType": "PurchaseTxn",         "OfferName": "${UpsertMomentForRewCert#MomentName}",         "Description": "${UpsertMomentForRewCert#MomentName}",         "MomentOutcome": {           "MomentCode": "${UpsertMomentForRewCert#MomentName}",           "EventType": "PurchaseTxn",           "OfferName": "${UpsertMomentForRewCert#MomentName}",           "OutcomeEquationUi": "100",           "CalculationTemplate": "<fixedpoints,[Number]>",           "OutcomeEquationTemplate": "%5B%7B%22name%22%3A%22fixedpoints%22%2C%22type%22%3A%22Number%22%2C%22objType%22%3A%22var%22%2C%22id%22%3A%22variable_0%22%2C%22value%22%3A%22100%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%2C%7B%22name%22%3A%22%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22drools%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22String.valueOf(100)%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%5D",           "OutcomeEquationDrools": "MomentParam[] params = new MomentParam[] {new MomentParam(\"OfferName\",\"${UpsertMomentForRewCert#MomentName}\"),new MomentParam(\"CyclicValue\",String.valueOf($cyclicValue)),new MomentParam(\"QualifyingDateAttributeValue\", new Date() )};\r\nMomentParam[] outcomeValues = null;\r\nmo.add(new MomentOutcome(\"${UpsertMomentForRewCert#MomentName}\",String.valueOf(100),params, outcomeValues));\r\n",           "FormulaName": "FIXEDAMT",           "Status": "P"         },         "MomentQualifyingRule": {           "MomentCode": "${UpsertMomentForRewCert#MomentName}",           "EventType": "PurchaseTxn",           "OfferName": "${UpsertMomentForRewCert#MomentName}",           "RuleEquationUI": "PurchaseTxn.ProgramCode==\"PP\" && PurchaseTxn.TransactionDetails.ItemNumber in (\"SKU-00070\", \"SKU-00069\")",           "RuleEquationDrools": "PurchaseTxnC(ProgramCode == \"PP\") &&  ($PurchaseTxnTransactionDetails : PurchaseTxn.TransactionDetailsC(ItemNumber in (\"SKU-00070\", \"SKU-00069\")) from $PurchaseTxn.TransactionDetails)\n accumulate($item : PurchaseTxn.TransactionDetailsC(ItemNumber in (\"SKU-00070\", \"SKU-00069\")) from $PurchaseTxn.TransactionDetails, $cyclicValue : sum($item.getQuantity()))",           "CyclicAttribute": "PurchaseTxn.TransactionDetails.Quantity",           "CyclicThreshold": 5.0,           "Status": "P"         },         "Status": "A"       }     ],     "Status": "P"   },   "BestOfferIndicator": false,   "AdvancedModeIndicator": false,   "ReleaseState": "P",   "IsTestUser": false,   "Status": "A" }{   "Description": "SKU WITH QTY OF 5",   "MomentCode": "${UpsertMomentForRewCert#MomentName}",   "MomentResponseValues": [     {       "MomentCode": "${UpsertMomentForRewCert#MomentName}",       "MomentType": "PROMOTIONAL_CURRENCY",       "ResponsePropertyName": "BASE INDICATOR",       "ResponsePropertyValue": "N",       "Status": "P"     },     {       "MomentCode": "${UpsertMomentForRewCert#MomentName}",       "MomentType": "PROMOTIONAL_CURRENCY",       "ResponsePropertyName": "POINT SUBTYPE",       "ResponsePropertyValue": "${GetPointAndSubPointType#HatchedEggsId}",       "Status": "P"     },     {       "MomentCode": "${UpsertMomentForRewCert#MomentName}",       "MomentType": "PROMOTIONAL_CURRENCY",       "ResponsePropertyName": "POINT TYPE",       "ResponsePropertyValue": "${GetPointAndSubPointType#EggsId}",       "Status": "P"     }   ],   "MomentType": "PROMOTIONAL_CURRENCY",   "StartDate": "2018-07-01T00:00:00Z",   "StartDateString": "07/01/2018 12:00:00 AM",   "EndDate": "2030-07-31T23:59:59Z",   "EndDateString": "07/31/2030 11:59:59 PM",   "MomentStatus": "A",   "MomentEvent": {     "MomentCode": "${UpsertMomentForRewCert#MomentName}",     "EventType": "PurchaseTxn",     "MomentEventId": null,     "MomentQualifyingDateAttribute": "CurrentDateTime",     "MomentQualifyingDateAttributeDrools": "$PurchaseTxn:PurchaseTxnC(IsItBetween( new Date() ,\"7/1/2018 12:00:00 AM\",\"7/31/2020 11:59:59 PM\"))",     "MomentOffers": [       {         "MomentCode": "${UpsertMomentForRewCert#MomentName}",         "EventType": "PurchaseTxn",         "OfferName": "${UpsertMomentForRewCert#MomentName}",         "Description": "${UpsertMomentForRewCert#MomentName}",         "MomentOutcome": {           "MomentCode": "${UpsertMomentForRewCert#MomentName}",           "EventType": "PurchaseTxn",           "OfferName": "${UpsertMomentForRewCert#MomentName}",           "OutcomeEquationUi": "100",           "CalculationTemplate": "<fixedpoints,[Number]>",           "OutcomeEquationTemplate": "%5B%7B%22name%22%3A%22fixedpoints%22%2C%22type%22%3A%22Number%22%2C%22objType%22%3A%22var%22%2C%22id%22%3A%22variable_0%22%2C%22value%22%3A%22100%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%2C%7B%22name%22%3A%22%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22drools%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22String.valueOf(100)%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%5D",           "OutcomeEquationDrools": "MomentParam[] params = new MomentParam[] {new MomentParam(\"OfferName\",\"${UpsertMomentForRewCert#MomentName}\"),new MomentParam(\"CyclicValue\",String.valueOf($cyclicValue)),new MomentParam(\"QualifyingDateAttributeValue\", new Date() )};\r\nMomentParam[] outcomeValues = null;\r\nmo.add(new MomentOutcome(\"${UpsertMomentForRewCert#MomentName}\",String.valueOf(100),params, outcomeValues));\r\n",           "FormulaName": "FIXEDAMT",           "Status": "P"         },         "MomentQualifyingRule": {           "MomentCode": "${UpsertMomentForRewCert#MomentName}",           "EventType": "PurchaseTxn",           "OfferName": "${UpsertMomentForRewCert#MomentName}",           "RuleEquationUI": "PurchaseTxn.ProgramCode==\"PP\" && PurchaseTxn.TransactionDetails.ItemNumber in (\"SKU-00070\", \"SKU-00069\")",           "RuleEquationDrools": "PurchaseTxnC(ProgramCode == \"PP\") &&  ($PurchaseTxnTransactionDetails : PurchaseTxn.TransactionDetailsC(ItemNumber in (\"SKU-00070\", \"SKU-00069\")) from $PurchaseTxn.TransactionDetails)\n accumulate($item : PurchaseTxn.TransactionDetailsC(ItemNumber in (\"SKU-00070\", \"SKU-00069\")) from $PurchaseTxn.TransactionDetails, $cyclicValue : sum($item.getQuantity()))",           "CyclicAttribute": "PurchaseTxn.TransactionDetails.Quantity",           "CyclicThreshold": 5.0,           "Status": "P"         },         "Status": "A"       }     ],     "Status": "P"   },   "BestOfferIndicator": false,   "AdvancedModeIndicator": false,   "ReleaseState": "P",   "IsTestUser": false,   "Status": "A" }]]></con:value>
        </con:property>
        <con:property>
          <con:name>UpdateBody</con:name>
          <con:value>{   "Description": "SKU WITH QTY OF 5",   "MomentCode": "${UpsertMomentForRewCert#MomentName}",   "MomentResponseValues": [     {       "MomentCode": "${UpsertMomentForRewCert#MomentName}",       "MomentType": "PROMOTIONAL_CURRENCY",       "ResponsePropertyName": "BASE INDICATOR",       "ResponsePropertyValue": "N",       "Status": "P"     },     {       "MomentCode": "${UpsertMomentForRewCert#MomentName}",       "MomentType": "PROMOTIONAL_CURRENCY",       "ResponsePropertyName": "POINT SUBTYPE",       "ResponsePropertyValue": "${GetPointAndSubPointType#HatchedEggsId}",       "Status": "P"     },     {       "MomentCode": "${UpsertMomentForRewCert#MomentName}",       "MomentType": "PROMOTIONAL_CURRENCY",       "ResponsePropertyName": "POINT TYPE",       "ResponsePropertyValue": "${GetPointAndSubPointType#EggsId}",       "Status": "P"     }   ],   "MomentType": "PROMOTIONAL_CURRENCY",   "StartDate": "2018-07-01T00:00:00Z",   "StartDateString": "07/01/2018 12:00:00 AM",   "EndDate": "2030-07-31T23:59:59Z",   "EndDateString": "07/31/2030 11:59:59 PM",   "MomentStatus": "A",   "MomentEvent": {     "MomentCode": "${UpsertMomentForRewCert#MomentName}",     "EventType": "PurchaseTxn",     "MomentEventId": null,     "MomentQualifyingDateAttribute": "CurrentDateTime",     "MomentQualifyingDateAttributeDrools": "$PurchaseTxn:PurchaseTxnC(IsItBetween( new Date() ,\"7/1/2018 12:00:00 AM\",\"7/31/2020 11:59:59 PM\"))",     "MomentOffers": [       {         "MomentCode": "${UpsertMomentForRewCert#MomentName}",         "EventType": "PurchaseTxn",         "OfferName": "${UpsertMomentForRewCert#MomentName}",         "Description": "${UpsertMomentForRewCert#MomentName}",         "MomentOutcome": {           "MomentCode": "${UpsertMomentForRewCert#MomentName}",           "EventType": "PurchaseTxn",           "OfferName": "${UpsertMomentForRewCert#MomentName}",           "OutcomeEquationUi": "100",           "CalculationTemplate": "&lt;fixedpoints,[Number]>",           "OutcomeEquationTemplate": "%5B%7B%22name%22%3A%22fixedpoints%22%2C%22type%22%3A%22Number%22%2C%22objType%22%3A%22var%22%2C%22id%22%3A%22variable_0%22%2C%22value%22%3A%22100%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%2C%7B%22name%22%3A%22%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22drools%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22String.valueOf(100)%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%5D",           "OutcomeEquationDrools": "MomentParam[] params = new MomentParam[] {new MomentParam(\"OfferName\",\"${UpsertMomentForRewCert#MomentName}\"),new MomentParam(\"CyclicValue\",String.valueOf($cyclicValue)),new MomentParam(\"QualifyingDateAttributeValue\", new Date() )};\r\nMomentParam[] outcomeValues = null;\r\nmo.add(new MomentOutcome(\"${UpsertMomentForRewCert#MomentName}\",String.valueOf(100),params, outcomeValues));\r\n",           "FormulaName": "FIXEDAMT",           "Status": "P"         },         "MomentQualifyingRule": {           "MomentCode": "${UpsertMomentForRewCert#MomentName}",           "EventType": "PurchaseTxn",           "OfferName": "${UpsertMomentForRewCert#MomentName}",           "RuleEquationUI": "PurchaseTxn.ProgramCode==\"PP\" &amp;&amp; PurchaseTxn.TransactionDetails.ItemNumber in (\"SKU-00070\", \"SKU-00069\")",           "RuleEquationDrools": "PurchaseTxnC(ProgramCode == \"PP\") &amp;&amp;  ($PurchaseTxnTransactionDetails : PurchaseTxn.TransactionDetailsC(ItemNumber in (\"SKU-00070\", \"SKU-00069\")) from $PurchaseTxn.TransactionDetails)\n accumulate($item : PurchaseTxn.TransactionDetailsC(ItemNumber in (\"SKU-00070\", \"SKU-00069\")) from $PurchaseTxn.TransactionDetails, $cyclicValue : sum($item.getQuantity()))",           "CyclicAttribute": "PurchaseTxn.TransactionDetails.Quantity",           "CyclicThreshold": 5.0,           "Status": "P"         },         "Status": "A"       }     ],     "Status": "P"   },   "BestOfferIndicator": false,   "AdvancedModeIndicator": false,   "ReleaseState": "P",   "IsTestUser": false,   "Status": "A" }</con:value>
        </con:property>
        <con:property>
          <con:name>MomentId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="AddProfileRGR" id="0a383af5-2c7a-4954-a37f-349ce6263ad6">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>09d0b29f-fbfa-4136-9573-3b813c1795b3</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>ProfileId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="AddPurchaseTransaction" id="4b7a8731-80cd-4045-ab9c-214ebcfced17">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>020fa426-82b4-435d-b482-aebd7f200c61</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>Body</con:name>
          <con:value>{   "ProfileId": "${#[Profile#AddProfileRGR#AddProfileRGR]#Response#$['ProfileId']}",   "TransactionTypeCode": "PR",   "TransactionNetTotal": "60",   "ShippingAndHandling": "0",   "TransactionTotalTax": "10",   "TransactionNumber": "Tran_${=new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(new Date())}",   "CurrencyCode": "USD",   "PostingDateTime": "3/30/2017 12:00:00 AM",   "TransactionDateTime": "3/2/2018 12:00:00 AM",   "TransactionEndDateTime": "3/2/2018 12:00:00 AM",   "OnlyAddTransData": "FALSE",   "SuspendTransaction": "FALSE",   "TransactionDescription": "Test Transaction 1 for PP",   "StoreCode": "PP1501",   "ProgramCode":"PP",   "GrossAmount": "76.53",    "TransactionDetails": [     {       "TaxAmount": "5",       "DollarValueGross": "76.53",       "DollarValueNet": "63.74",       "ItemNumber": "SKU-00069",       "ItemNumberTypeCode": "S",       "Quantity": "7",       "LineNumber": 1,       "ItemTransactionTypeCode": "PR",          }      ],      "Tenders": [     {       "TenderCode": "CASH",       "TenderAmount": "50"     }     ]      } }</con:value>
        </con:property>
        <con:property>
          <con:name>Program-Code</con:name>
          <con:value>PP</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="GetMomentByCode" id="a7684a79-9bec-43bc-b6a5-ac8f32292035">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>f1f7aab1-8bb1-41df-92fb-3dd357eccf96</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>momentCode</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="GetpointSummary" id="ecf7be67-b2b2-4d1e-8de2-5be30eca68c6">
    <con:settings/>
    <con:config service="RestAPIs" resourcePath="/api/v1/profiles/{profileId}/points/summary" methodName="GetPointsSummary" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="GetpointSummary" id="90aa5f43-a530-41eb-9446-2dde6c33780e" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>https://d3aldv-pveapi.skynetlowerenv.com/</con:endpoint>
        <con:request/>
        <con:originalUri>https://q3alin-pveapi.loyalty-lower.peoplecloud.epsilon.com/api/v1/profiles/f8395fa7-e3ab-4431-9429-97da84e77c17/points/summary</con:originalUri>
        <con:assertion type="DataAndMetadataAssertion" id="29de00b0-56cf-4538-bd15-3f4940557dac" name="Smart Assertion">
          <con:configuration xsi:type="con:DataAndMetadataAssertion">
            <con:mode>Received Metadata</con:mode>
            <con:elements>
              <con:path>$['Headers']['date']</con:path>
              <con:element>date</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Thu, 13 Oct 2022 08:27:18 GMT</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['server']</con:path>
              <con:element>server</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Apache/2.4.6 (Red Hat Enterprise Linux) OpenSSL/1.0.2k-fips</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-length']</con:path>
              <con:element>content-length</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>3171</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['language-code']</con:path>
              <con:element>language-code</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>EN_US</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-frame-options']</con:path>
              <con:element>x-frame-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>DENY</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['pragma']</con:path>
              <con:element>pragma</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-content-type-options']</con:path>
              <con:element>x-content-type-options</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>nosniff</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['x-xss-protection']</con:path>
              <con:element>x-xss-protection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>1</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['connection']</con:path>
              <con:element>connection</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>keep-alive</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['correlationid']</con:path>
              <con:element>correlationid</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>9dac0593-aad9-552f-1154-6ad25c533fe8</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['content-type']</con:path>
              <con:element>content-type</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>application/json; charset=utf-8</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['process-time']</con:path>
              <con:element>process-time</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>33ms</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['#status#']</con:path>
              <con:element>#status#</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>true</con:enabled>
              <con:expectedValue>HTTP/1.1 200 OK</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['cache-control']</con:path>
              <con:element>cache-control</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>no-store,no-cache</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:elements>
              <con:path>$['Headers']['new-correlationid']</con:path>
              <con:element>new-correlationid</con:element>
              <con:operatorId>1</con:operatorId>
              <con:enabled>false</con:enabled>
              <con:expectedValue>0HMLCDI4AUQMI:00000870</con:expectedValue>
              <con:caseSensitive>true</con:caseSensitive>
              <con:numberType>false</con:numberType>
              <con:expectedDataType>1</con:expectedDataType>
            </con:elements>
            <con:originalMessage>{"Headers":{"date":"Thu, 13 Oct 2022 08:27:18 GMT","server":"Apache/2.4.6 (Red Hat Enterprise Linux) OpenSSL/1.0.2k-fips","content-length":"3171","language-code":"EN_US","x-frame-options":"DENY","pragma":"no-cache","x-content-type-options":"nosniff","x-xss-protection":"1","connection":"keep-alive","correlationid":"9dac0593-aad9-552f-1154-6ad25c533fe8","content-type":"application/json; charset=utf-8","process-time":"33ms","#status#":"HTTP/1.1 200 OK","cache-control":"no-store,no-cache","new-correlationid":"0HMLCDI4AUQMI:00000870"}}</con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f67e034c-8f63-45d1-abb5-ffa320a1e652" name="TransactionId Validation">
          <con:configuration>
            <path>$.[0].ActTransactionId</path>
            <content>${#[ActivityCertificate#PurchaseTransaction#PurchaseTransaction]#Response#$['TransactionId']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7daf5113-db6e-4dff-99e9-b2a827031c07" name="Profile Id Validation">
          <con:configuration>
            <path>$.[0].ProfileId</path>
            <content>${#[Profile#AddProfileRGR#AddProfileRGR]#Response#$['ProfileId']}</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="380295ce-61a9-44e5-8ff3-3e398fd334a8" name="Point Validation">
          <con:configuration>
            <path>$.[?(@.ActTransactionId == '${#[ActivityCertificate#PurchaseTransaction#PurchaseTransaction]#Response#$['TransactionId']}' &amp;&amp; @.MomentId == '${#[Moment#UpsertMoment#MomentId]#result}')].PointsAmount</path>
            <content>[100.0]</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="Authorization" value="OAuth ${#Project#AuthToken}"/>
          <con:entry key="profileId" value="${#[Profile#AddProfileRGR#AddProfileRGR]#Response#$['ProfileId']}"/>
          <con:entry key="Accept-Language" value="en-US"/>
          <con:entry key="status" value="A"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>profileId</con:entry>
          <con:entry>status</con:entry>
          <con:entry>Accept-Language</con:entry>
          <con:entry>Authorization</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="47bb433b-fb70-41f0-b289-86004efd1deb">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="6705507e-ac0c-4a4b-acac-36b4c8b57bc6">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="537e61a1-a742-4637-a094-8cad62ddccd2">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="Deactivate Moment" id="b55ff597-d21a-4ee6-b612-ed137c12ef5b">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>c903534c-32ad-44dc-9cb6-a72fc8de1482</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>MomentId</con:name>
          <con:value>${#[Moment#UpsertMoment#MomentId]#result}</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
  <con:environmentSpec>
    <con:entry environmentId="6705507e-ac0c-4a4b-acac-36b4c8b57bc6">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
    <con:entry environmentId="537e61a1-a742-4637-a094-8cad62ddccd2">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:testCase>
