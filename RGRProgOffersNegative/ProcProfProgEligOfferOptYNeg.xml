<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="a863a1bc-66d8-4b94-b026-52c5713ab0c0" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="ProcProfProgEligOfferOptYNeg" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="a863a1bc-66d8-4b94-b026-52c5713ab0c0fileName">ProcProfProgEligOfferOptYNeg</con:setting>
  </con:settings>
  <con:testStep type="calltestcase" name="UpsertProgOfferWithElig" id="4a6135ed-a279-4149-8a39-6cf00ad397f4">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>62347be5-e70f-43e3-8cce-2776a56d2ab1</con:targetTestCase>
      <con:properties/>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="UpsertMomentProgOffersWithElig" id="11b613c5-8fe5-4ee2-9d3d-848dfd498c4a">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>58a85117-5558-4be0-b68f-214c9fbde4c3</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>MomentName</con:name>
          <con:value>RGRELIGOFFERMOMENT</con:value>
        </con:property>
        <con:property>
          <con:name>CreateBody</con:name>
          <con:value><![CDATA[{     "Description": "Test Display Offer 2",     "MomentCode": "RGRELIGOFFERMOMENT",     "MomentType": "DISPLAY_OFFERS",     "StartDate": "2018-10-01T00:00:00Z",     "StartDateString": "10/01/2018 12:00:00 AM",     "EndDate": "2030-12-31T23:59:59Z",     "EndDateString": "12/31/2030 11:59:59 PM",     "OldEndDate": "2020-10-31T23:59:59Z",     "MomentStatus": "A",     "MomentEvent": {       "MomentCode": "RGRELIGOFFERMOMENT",       "EventType": "Get_Display_Offers",       "MomentQualifyingDateAttribute": "CurrentDateTime",       "MomentQualifyingDateAttributeDrools": "$Get_Display_Offers:Get_Display_OffersC(IsItBetween( new Date() ,\"10/1/2018 12:00:00 AM\",\"10/31/2020 11:59:59 PM\"))",       "MomentOffers": [         {           "MomentCode": "RGRELIGOFFERMOMENT",           "EventType": "Get_Display_Offers",           "OfferName": "RGRELIGOFFERMOMENT",           "MomentOutcome": {             "MomentCode": "RGRELIGOFFERMOMENT",             "EventType": "Get_Display_Offers",             "OfferName": "RGRELIGOFFERMOMENT",             "OutcomeEquationUi": "\"800_EGGS\"",             "CalculationTemplate": "<offer_code,[String]>",             "OutcomeEquationTemplate": "%5B%7B%22name%22%3A%22offer_code%22%2C%22type%22%3A%22String%22%2C%22objType%22%3A%22var%22%2C%22id%22%3A%22variable_0%22%2C%22value%22%3A%22%5C%22800_EGGS%5C%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%2C%7B%22name%22%3A%22%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22drools%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22String.valueOf(%5C%22800_EGGS%5C%22)%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%5D",             "OutcomeEquationDrools": "MomentParam[] params = new MomentParam[] {new MomentParam(\"OfferName\",\"RGRELIGOFFERMOMENT\"),new MomentParam(\"QualifyingDateAttributeValue\", new Date() )};\r\nMomentParam[] outcomeValues = null;\r\nmo.add(new MomentOutcome(\"RGRELIGOFFERMOMENT\",String.valueOf(\"800_EGGS\"),params, outcomeValues));\r\n",             "FormulaName": "OFFER",             "Status": "P"                     },           "MomentQualifyingRule": {             "MomentCode": "RGRELIGOFFERMOMENT",             "EventType": "Get_Display_Offers",             "OfferName": "RGRELIGOFFERMOMENT",             "RuleEquationUI": "Get_Display_Offers.ProgramCode == \"PP\" && Get_Display_Offers.Profile.TierCode == \"NEST\" && Get_Display_Offers.Profile.FirstName == \"DISPOFFER10262018\"",             "RuleEquationDrools": "Get_Display_OffersC(ProgramCode == \"PP\" && Profile!.TierCode == \"NEST\" && Profile!.FirstName == \"DISPOFFER10262018\")",             "Status": "P"                     },                  "Status": "P"                }       ],         "Status": "A"     },     "BestOfferIndicator": false,     "AdvancedModeIndicator": false,     "ReleaseState": "P",     "IsTestUser": false,     "Status": "A"    }]]></con:value>
        </con:property>
        <con:property>
          <con:name>UpdateBody</con:name>
          <con:value><![CDATA[{     "Description": "Test Display Offer 2",     "MomentCode": "RGRELIGOFFERMOMENT",     "MomentType": "DISPLAY_OFFERS",     "StartDate": "2018-10-01T00:00:00Z",     "StartDateString": "10/01/2018 12:00:00 AM",     "EndDate": "2030-12-31T23:59:59Z",     "EndDateString": "12/31/2030 11:59:59 PM",     "OldEndDate": "2020-10-31T23:59:59Z",     "MomentStatus": "A",     "MomentEvent": {       "MomentCode": "RGRELIGOFFERMOMENT",       "EventType": "Get_Display_Offers",       "MomentQualifyingDateAttribute": "CurrentDateTime",       "MomentQualifyingDateAttributeDrools": "$Get_Display_Offers:Get_Display_OffersC(IsItBetween( new Date() ,\"10/1/2018 12:00:00 AM\",\"10/31/2020 11:59:59 PM\"))",       "MomentOffers": [         {           "MomentCode": "RGRELIGOFFERMOMENT",           "EventType": "Get_Display_Offers",           "OfferName": "RGRELIGOFFERMOMENT",           "MomentOutcome": {             "MomentCode": "RGRELIGOFFERMOMENT",             "EventType": "Get_Display_Offers",             "OfferName": "RGRELIGOFFERMOMENT",             "OutcomeEquationUi": "\"800_EGGS\"",             "CalculationTemplate": "<offer_code,[String]>",             "OutcomeEquationTemplate": "%5B%7B%22name%22%3A%22offer_code%22%2C%22type%22%3A%22String%22%2C%22objType%22%3A%22var%22%2C%22id%22%3A%22variable_0%22%2C%22value%22%3A%22%5C%22800_EGGS%5C%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%2C%7B%22name%22%3A%22%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22drools%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22String.valueOf(%5C%22800_EGGS%5C%22)%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%5D",             "OutcomeEquationDrools": "MomentParam[] params = new MomentParam[] {new MomentParam(\"OfferName\",\"RGRELIGOFFERMOMENT\"),new MomentParam(\"QualifyingDateAttributeValue\", new Date() )};\r\nMomentParam[] outcomeValues = null;\r\nmo.add(new MomentOutcome(\"RGRELIGOFFERMOMENT\",String.valueOf(\"800_EGGS\"),params, outcomeValues));\r\n",             "FormulaName": "OFFER",             "Status": "A"                     },           "MomentQualifyingRule": {             "MomentCode": "RGRELIGOFFERMOMENT",             "EventType": "Get_Display_Offers",             "OfferName": "RGRELIGOFFERMOMENT",             "RuleEquationUI": "Get_Display_Offers.ProgramCode == \"PP\" && Get_Display_Offers.Profile.TierCode == \"NEST\" && Get_Display_Offers.Profile.FirstName == \"DISPOFFER10262018\"",             "RuleEquationDrools": "Get_Display_OffersC(ProgramCode == \"PP\" && Profile!.TierCode == \"NEST\" && Profile!.FirstName == \"DISPOFFER10262018\")",             "Status": "A"                     },                  "Status": "A"                }       ],         "Status": "A"     },     "BestOfferIndicator": false,     "AdvancedModeIndicator": false,     "ReleaseState": "P",     "IsTestUser": false,     "Status": "A"    }]]></con:value>
        </con:property>
        <con:property>
          <con:name>MomentId</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
</con:testCase>
