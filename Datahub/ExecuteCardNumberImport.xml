<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="00df8780-69bd-4f39-a1df-2e9ca67385d0" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="ExecuteCardNumberImport" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="00df8780-69bd-4f39-a1df-2e9ca67385d0fileName">ExecuteCardNumberImport</con:setting>
  </con:settings>
  <con:testStep type="calltestcase" name="RunEnableBatchS3DefaultSetting" id="ef8412d2-0726-414c-b7bf-25690d766139">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>691913d9-d56f-409d-bc92-80cc04799067</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>BatchS3DefaultSettingId</con:name>
          <con:value>712a1b34-9c52-db49-8034-6010ab6fe88e</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>BatchS3DefaultSettingId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="RunExecuteBatchWorkFlowforCardNumberImport" id="805b66d9-9c26-4d70-9aba-6fcbfd3447be">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>493c35b3-7a9e-4c79-a0c4-3423fbf93331</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>DataHubProcessDefinitionKey</con:name>
          <con:value>Automation_CardNumber_Import</con:value>
        </con:property>
        <con:property>
          <con:name>DataHubProcessId</con:name>
          <con:value>f375aa6b-ac18-11ec-93ca-1235580c8ebb</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>DataHubProcessId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="RunAddUpdateDeployReloadScripts" id="61dd49e7-08dd-471a-93c3-cf33b93b1157">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>8ab8ee29-e996-497f-8eb6-78c733f3d9c1</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>ScriptId</con:name>
          <con:value>33da4707-a505-42ac-98b2-a70929e739fa</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties>
        <con:entry>ScriptId</con:entry>
      </con:returnProperties>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="datasource" name="CardNumberLayoutDataSource" id="42279c32-54f5-4fd6-9e53-a512e29981c6">
    <con:settings/>
    <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dataSource type="Data Generator">
        <con:configuration>
          <generatedDataCount>1</generatedDataCount>
          <generatorsTotalNumber>2</generatorsTotalNumber>
          <lastSelectedProperty>1</lastSelectedProperty>
          <GeneratorType0>GUID</GeneratorType0>
          <PropertyName0>JobName</PropertyName0>
          <repetitionCountJobName>0</repetitionCountJobName>
          <repeatValuesJobName>false</repeatValuesJobName>
          <GeneratorType1>GUID</GeneratorType1>
          <PropertyName1>FileName</PropertyName1>
          <repetitionCountFileName>0</repetitionCountFileName>
          <repeatValuesFileName>false</repeatValuesFileName>
          <escapeSpaceSequence/>
        </con:configuration>
      </con:dataSource>
      <con:shared>true</con:shared>
      <con:restartShared>true</con:restartShared>
      <con:property>JobName</con:property>
      <con:property>FileName</con:property>
      <con:restartOnRun>true</con:restartOnRun>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="TransferPropertiesToCardNumberImportLayout" id="4c7c2236-dfb1-4e3c-b783-0be4f865522e">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false">
        <con:name>CardNumber1</con:name>
        <con:sourceType>JobName</con:sourceType>
        <con:sourceStep>CardNumberLayoutDataSource</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>CardNumber</con:targetType>
        <con:targetStep>CardNumberImportPropertiesRecord1</con:targetStep>
        <con:targetPath/>
        <con:type>XPATH</con:type>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>CardNumber2</con:name>
        <con:sourceType>FileName</con:sourceType>
        <con:sourceStep>CardNumberLayoutDataSource</con:sourceStep>
        <con:targetType>CardNumber</con:targetType>
        <con:targetStep>CardNumberImportPropertiesRecord2</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="CardNumberImportPropertiesRecord1" id="81f125a7-bd42-439f-9808-3ca71a55fae8">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property>
          <con:name>CardNumber</con:name>
          <con:value>5c0f4c80-927d-486d-ad05-763f10e89ae2</con:value>
        </con:property>
        <con:property>
          <con:name>LotNumber</con:name>
          <con:value>LOT-791</con:value>
        </con:property>
        <con:property>
          <con:name>EnrollmentChannelCode</con:name>
          <con:value>WEB</con:value>
        </con:property>
        <con:property>
          <con:name>Status</con:name>
          <con:value>A</con:value>
        </con:property>
        <con:property>
          <con:name>JsonExternalData</con:name>
          <con:value>"{""CardInfo"":""Card141""}"</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="CardNumberImportPropertiesRecord2" id="e518c56d-49b1-417b-82ed-fb872c6c44ef">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property>
          <con:name>CardNumber</con:name>
          <con:value>d18fb9ba-c64e-43b1-9f0d-920e98ec1016</con:value>
        </con:property>
        <con:property>
          <con:name>LotNumber</con:name>
          <con:value>LOT-284</con:value>
        </con:property>
        <con:property>
          <con:name>EnrollmentChannelCode</con:name>
          <con:value>WEB</con:value>
        </con:property>
        <con:property>
          <con:name>Status</con:name>
          <con:value>A</con:value>
        </con:property>
        <con:property>
          <con:name>JsonExternalData</con:name>
          <con:value>"{""CardInfo"":""Card289""}"</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="CreateCardNumberImportFile" id="bf7b4538-62c7-40c9-9ae7-9412eed8f981">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonGenerator
import groovy.json.JsonGenerator.Converter

def cardNumberImportLayoutList1 = testRunner.testCase.getTestSteps().CardNumberImportPropertiesRecord1.getPropertyList();
def cardNumberImportLayoutList2 = testRunner.testCase.getTestSteps().CardNumberImportPropertiesRecord2.getPropertyList();


def parseCollection(propertyList){  	
	def mapClass = [:]
	for( item in propertyList)
	{
		if( item.value == null  ){
			 item.value= '';
		}
	    mapClass[item.name] = item.value;	  
	}    
	return mapClass;
}

def jsonDefaultOutput = new JsonGenerator.Options()
.dateFormat('MM-dd-yyyy')
.build(); 

def cardNumberString1 = parseCollection(cardNumberImportLayoutList1);
def cardNumberString2 = parseCollection(cardNumberImportLayoutList2);


def s3Bucket = context.expand( '${#Project#S3Bucket}' )
def todayDate = new Date().format( 'MM-dd-yyyy' );
def jobName = context.expand( '${CardNumberLayoutDataSource#JobName}' )
def programCode = context.expand( '${#Project#ProgramCode}' )
def fileContent =  [cardNumberString1 ,  cardNumberString2 ];
def scriptName = context.expand( '${#TestCase#ScriptName}' )

def jsonExternalDataMap = [:]
def dataHubProcessId = context.expand( '${RunExecuteBatchWorkFlowforCardNumberImport#DataHubProcessId}' )


def fileName = 'CardNumberImport' + dataHubProcessId  + '.txt';
jsonExternalDataMap["FileName"]  = fileName;
jsonExternalDataMap["FileLocation"]  = "s3://" + s3Bucket + "/automation/ProcessCardNumberInput";
jsonExternalDataMap["FileContent"] = fileContent;
jsonExternalDataMap["UseHeader"] = 'true';

def batchInputJsonMap = [:];
batchInputJsonMap["JobName"] = 'InvokeScript_' + jobName;
batchInputJsonMap["FileName"] = fileName;
batchInputJsonMap["FileInputLocation"] = "s3://" + s3Bucket + "/automation/" + todayDate + "/Input";
batchInputJsonMap["FileOutputLocation"] = "s3://" + s3Bucket + "/automation/" + todayDate + "/Output";
batchInputJsonMap["EmailAddresses"]= "";
batchInputJsonMap["JobTypeId"]= "4923d185-0c86-4c15-9356-67597ab70526";
batchInputJsonMap["JobType"]= "";
batchInputJsonMap["ProgramCode"]= programCode;
batchInputJsonMap["DataOutputType"]= "FULL";
batchInputJsonMap["MaxThreads"]= 50;

batchInputJsonMap["ScriptName"] =  scriptName;
batchInputJsonMap["JsonExternalData"]= jsonExternalDataMap;
batchInputJsonMap["AdditionalRunData"]= "";

def batchInputJson = jsonDefaultOutput.toJson(batchInputJsonMap);

return batchInputJson;</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="CreateBatchJob" id="9386c67c-627c-4295-8432-62be0fbf4b37">
    <con:settings/>
    <con:config service="RestAPIs" resourcePath="/api/v1/batch/jobs" methodName="Create Batch Job" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="CreateBatchJob" id="0121f0fe-0b53-489c-8475-2dee938e777f" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>https://d3aldv-pveapi.skynetlowerenv.com/</con:endpoint>
        <con:request>${CreateCardNumberImportFile#result}</con:request>
        <con:originalUri>https://q3alin-pveapi.skynetlowerenv.com/api/v1/batch/jobs</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="5cdf49cf-a90d-4647-8cd4-0e391fd5e772" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>201</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="Authorization" value="OAuth ${#Project#AuthToken}"/>
          <con:entry key="Accept-Language" value="en-US"/>
          <con:entry key="Program-Code" value="${#Project#ProgramCode}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Authorization</con:entry>
          <con:entry>Accept-Language</con:entry>
          <con:entry>Program-Code</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="47bb433b-fb70-41f0-b289-86004efd1deb">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="goto" name="IfBatchJobIdDoesNotExist" id="e8a1cc19-70d7-4863-81cd-def45ef64596">
    <con:settings/>
    <con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:condition>
        <con:name>BatchJobId</con:name>
        <con:type>XPATH</con:type>
        <con:expression>!exists(//*:Response[1]/*:BatchJobId)</con:expression>
        <con:targetStep>S3ProgramRest</con:targetStep>
      </con:condition>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="TransferSysBatchJobIdAndDatahubProcessId" id="e7aa1245-122e-4bc6-b6fc-e9c8b69a5ad1">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" transferChildNodes="false">
        <con:name>BatchJobId</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>CreateBatchJob</con:sourceStep>
        <con:sourcePath>$['BatchJobId']</con:sourcePath>
        <con:targetType>SysJobID</con:targetType>
        <con:targetStep>RunBatchJobStatusValidation</con:targetStep>
        <con:targetPath/>
        <con:type>JSONPATH</con:type>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>DatahubWorkflowProcessId</con:name>
        <con:sourceType>DataHubProcessId</con:sourceType>
        <con:sourceStep>RunExecuteBatchWorkFlowforCardNumberImport</con:sourceStep>
        <con:sourcePath/>
        <con:targetType>DatahubProcessId</con:targetType>
        <con:targetStep>RunDatahubWorkflowValidation</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="RunBatchJobStatusValidation" id="5722029e-7fb3-4671-9018-def18120c03b">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>a2770463-9651-4187-96b0-e0f5fb77f889</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>SysJobID</con:name>
          <con:value>630dd59c-adee-4912-aa1f-1d6c7b5f0a62</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="S3ProgramRest" id="aed10492-d90f-42c8-8574-0d021baf67dc">
    <con:settings/>
    <con:config service="RestAPIs" methodName="UpdateDefaultSetting" resourcePath="/api/v1/referencedata/programs/defaultsettings/{defaultSettingId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="S3ProgramRest" id="02982e52-8357-4991-a1c4-561796f8ba25" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://d3aldv-pveapi.skynetlowerenv.com/</con:endpoint>
        <con:request>{
    "ParameterName":  "BATCH_S3_ENABLED",
    "ParameterValue":  "Y"
 }</con:request>
        <con:originalUri>https://q3alin-pveapi.skynetlowerenv.com/api/v1/referencedata/programs/defaultsettings/</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="8d5e1985-d834-4546-99d1-23f6a5a65ae2" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="Authorization" value="OAuth ${#Project#AuthToken}"/>
          <con:entry key="defaultSettingId" value="${RunEnableBatchS3DefaultSetting#BatchS3DefaultSettingId}"/>
          <con:entry key="Accept-Language" value="en-US"/>
          <con:entry key="content" value="application/json"/>
        </con:parameters>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="SendDatahubWorkflowResumeMessage" id="07c46bf4-ca0d-44be-880d-cfab8ff597d0">
    <con:settings/>
    <con:config service="DatahubAPIs" resourcePath="/orchestration/v1/process-instance/resume" methodName="ResumeWorkFlow" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="SendDatahubWorkflowResumeMessage" id="fbab81a6-bfc0-4489-b4d8-80bf4a5ab419" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:request>{
  "messageName": "Message_Resume",
  "processInstanceIds": [
    "${RunExecuteBatchWorkFlowforCardNumberImport#DataHubProcessId}"
  ]
}</con:request>
        <con:originalUri>https://u-acpapi.datahub.epsilon.com/orchestration/v1/process-instance/resume</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="2c8d8994-2b8b-4f33-8e23-1e59af96eb13" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="Authorization" value="Bearer ${#Project#Datahub Orchestration Token}"/>
          <con:entry key="X-ADH-Tenant-Code" value="${#Project#Tenant}"/>
          <con:entry key="Content-Type" value="application/json"/>
          <con:entry key="accept" value="application/json"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>Authorization</con:entry>
          <con:entry>Content-Type</con:entry>
          <con:entry>X-ADH-Tenant-Code</con:entry>
          <con:entry>accept</con:entry>
        </con:parameterOrder>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="RunDatahubWorkflowValidation" id="613cba05-3b45-46f3-8ea2-f393ded87957">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>281bbad6-502b-44e0-b592-5707e4881889</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>DatahubProcessId</con:name>
          <con:value>f375aa6b-ac18-11ec-93ca-1235580c8ebb</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>PARALLELL</con:runMode>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>ScriptId</con:name>
    </con:property>
    <con:property>
      <con:name>ScriptName</con:name>
      <con:value>GenerateFileContentInS3</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
</con:testCase>
