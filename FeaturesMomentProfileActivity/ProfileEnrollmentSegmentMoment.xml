<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="40840c8a-0c4c-45d2-86df-b42ba2293e2b" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="ProfileEnrollmentSegmentMoment" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="40840c8a-0c4c-45d2-86df-b42ba2293e2bfileName">ProfileEnrollmentSegmentMoment</con:setting>
  </con:settings>
  <con:testStep type="calltestcase" name="DisableEnrollmentActivation" id="0b59f439-9f28-423c-8bbe-553fe4e2d47d">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>9038d3a3-971b-4525-8208-f0102aa600a4</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>Program-Code</con:name>
          <con:value>PP</con:value>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="UpsertMoment" id="ba811cd6-5767-4b67-be7f-eedf25b6c19c">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>58a85117-5558-4be0-b68f-214c9fbde4c3</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>MomentName</con:name>
          <con:value>RGRENROLLSEGMOMENT</con:value>
        </con:property>
        <con:property>
          <con:name>CreateBody</con:name>
          <con:value><![CDATA[{   "Description": "${UpsertMoment#MomentName}",   "MomentCode": "${UpsertMoment#MomentName}",   "MomentType": "SEGMENT",   "StartDate": "2018-07-01T00:00:00Z",   "StartDateString": "07/01/2018 12:00:00 AM",   "EndDate": "2030-07-31T23:59:59Z",   "EndDateString": "07/31/2030 11:59:59 PM",   "MomentStatus": "A",   "MomentEvent": {     "MomentCode": "${UpsertMoment#MomentName}",     "EventType": "Add_Profile",     "MomentQualifyingDateAttribute": "CurrentDateTime",     "MomentQualifyingDateAttributeDrools": "$Add_Profile:Add_ProfileC(IsItBetween( new Date() ,\"7/1/2018 12:00:00 AM\",\"7/31/2020 11:59:59 PM\"))",     "MomentOffers": [       {         "MomentCode": "${UpsertMoment#MomentName}",         "EventType": "Add_Profile",         "OfferName": "${UpsertMoment#MomentName}",         "Description": "${UpsertMoment#MomentName}",         "MomentOutcome": {           "MomentCode": "${UpsertMoment#MomentName}",           "EventType": "Add_Profile",           "OfferName": "${UpsertMoment#MomentName}",           "OutcomeEquationUi": "SEGMENT=\"ATTRITION_SCORE\";SEGMENTVALUE=\"100\";",           "CalculationTemplate": "SEGMENT=<SegmentName,[String]>;SEGMENTVALUE=<SegmentValue,[String]>;",           "OutcomeEquationTemplate": "%5B%7B%22name%22%3A%22SEGMENT%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22rtn%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22%3D%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22cmp%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22SegmentName%22%2C%22type%22%3A%22String%22%2C%22objType%22%3A%22var%22%2C%22id%22%3A%22variable_0%22%2C%22value%22%3A%22%5C%22ATTRITION_SCORE%5C%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%2C%7B%22name%22%3A%22%3B%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22cmp%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22SEGMENTVALUE%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22rtn%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22%3D%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22cmp%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22SegmentValue%22%2C%22type%22%3A%22String%22%2C%22objType%22%3A%22var%22%2C%22id%22%3A%22variable_1%22%2C%22value%22%3A%22%5C%22100%5C%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%2C%7B%22name%22%3A%22%3B%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22cmp%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22drools%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22SEGMENT%3DString.valueOf(%5C%22ATTRITION_SCORE%5C%22)%3BSEGMENTVALUE%3DString.valueOf(%5C%22100%5C%22)%3B%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%5D",           "OutcomeEquationDrools": "MomentParam[] params = new MomentParam[] {new MomentParam(\"OfferName\",\"RGRENROLLSEGMOMENT\"),new MomentParam(\"QualifyingDateAttributeValue\", new Date() )};\r\nMomentParam[] outcomeValues = new MomentParam[] {new MomentParam(\"SEGMENT\",String.valueOf(\"ATTRITION_SCORE\")),new MomentParam(\"SEGMENTVALUE\",String.valueOf(\"100\"))};\r\nmo.add(new MomentOutcome(\"RGRENROLLSEGMOMENT\",null,params, outcomeValues));\r\n",           "FormulaName": "SEGMENT",           "Status": "A"              },         "MomentQualifyingRule": {           "MomentCode": "${UpsertMoment#MomentName}",           "EventType": "Add_Profile",           "OfferName": "${UpsertMoment#MomentName}",           "RuleEquationUI": "Add_Profile.ProgramCode == \"PP\" && Add_Profile.Gender == \"M\"",           "RuleEquationDrools": "Add_ProfileC(ProgramCode == \"PP\" && Gender == \"M\")",           "Status": "A"                    },                 "Status": "A"               }     ],        "Status": "A"        },   "BestOfferIndicator": false,   "AdvancedModeIndicator": false,   "ReleaseState": "P",   "IsTestUser": false,   "Status": "A"   }]]></con:value>
        </con:property>
        <con:property>
          <con:name>UpdateBody</con:name>
          <con:value><![CDATA[{   "Description": "${UpsertMoment#MomentName}",   "MomentCode": "${UpsertMoment#MomentName}",   "MomentType": "SEGMENT",   "StartDate": "2018-07-01T00:00:00Z",   "StartDateString": "07/01/2018 12:00:00 AM",   "EndDate": "2030-07-31T23:59:59Z",   "EndDateString": "07/31/2030 11:59:59 PM",   "MomentStatus": "A",   "MomentEvent": {     "MomentCode": "${UpsertMoment#MomentName}",     "EventType": "Add_Profile",     "MomentQualifyingDateAttribute": "CurrentDateTime",     "MomentQualifyingDateAttributeDrools": "$Add_Profile:Add_ProfileC(IsItBetween( new Date() ,\"7/1/2018 12:00:00 AM\",\"7/31/2020 11:59:59 PM\"))",     "MomentOffers": [       {         "MomentCode": "${UpsertMoment#MomentName}",         "EventType": "Add_Profile",         "OfferName": "${UpsertMoment#MomentName}",         "Description": "${UpsertMoment#MomentName}",         "MomentOutcome": {           "MomentCode": "${UpsertMoment#MomentName}",           "EventType": "Add_Profile",           "OfferName": "${UpsertMoment#MomentName}",           "OutcomeEquationUi": "SEGMENT=\"ATTRITION_SCORE\";SEGMENTVALUE=\"100\";",           "CalculationTemplate": "SEGMENT=<SegmentName,[String]>;SEGMENTVALUE=<SegmentValue,[String]>;",           "OutcomeEquationTemplate": "%5B%7B%22name%22%3A%22SEGMENT%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22rtn%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22%3D%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22cmp%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22SegmentName%22%2C%22type%22%3A%22String%22%2C%22objType%22%3A%22var%22%2C%22id%22%3A%22variable_0%22%2C%22value%22%3A%22%5C%22ATTRITION_SCORE%5C%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%2C%7B%22name%22%3A%22%3B%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22cmp%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22SEGMENTVALUE%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22rtn%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22%3D%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22cmp%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22SegmentValue%22%2C%22type%22%3A%22String%22%2C%22objType%22%3A%22var%22%2C%22id%22%3A%22variable_1%22%2C%22value%22%3A%22%5C%22100%5C%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%2C%7B%22name%22%3A%22%3B%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22cmp%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%2C%22attributes%22%3A%5B%5D%7D%2C%7B%22name%22%3A%22%22%2C%22type%22%3A%22%22%2C%22objType%22%3A%22drools%22%2C%22id%22%3A%22%22%2C%22value%22%3A%22SEGMENT%3DString.valueOf(%5C%22ATTRITION_SCORE%5C%22)%3BSEGMENTVALUE%3DString.valueOf(%5C%22100%5C%22)%3B%22%2C%22isSelect%22%3Afalse%2C%22funcName%22%3A%22%22%2C%22filterType%22%3A%22%22%2C%22drools%22%3A%22%22%2C%22collectionAttribute%22%3Afalse%2C%22refId%22%3A%22%22%7D%5D",           "OutcomeEquationDrools": "MomentParam[] params = new MomentParam[] {new MomentParam(\"OfferName\",\"RGRENROLLSEGMOMENT\"),new MomentParam(\"QualifyingDateAttributeValue\", new Date() )};\r\nMomentParam[] outcomeValues = new MomentParam[] {new MomentParam(\"SEGMENT\",String.valueOf(\"ATTRITION_SCORE\")),new MomentParam(\"SEGMENTVALUE\",String.valueOf(\"100\"))};\r\nmo.add(new MomentOutcome(\"RGRENROLLSEGMOMENT\",null,params, outcomeValues));\r\n",           "FormulaName": "SEGMENT",           "Status": "A"              },         "MomentQualifyingRule": {           "MomentCode": "${UpsertMoment#MomentName}",           "EventType": "Add_Profile",           "OfferName": "${UpsertMoment#MomentName}",           "RuleEquationUI": "Add_Profile.ProgramCode == \"PP\" && Add_Profile.Gender == \"M\"",           "RuleEquationDrools": "Add_ProfileC(ProgramCode == \"PP\" && Gender == \"M\")",           "Status": "A"                    },                 "Status": "A"               }     ],        "Status": "A"        },   "BestOfferIndicator": false,   "AdvancedModeIndicator": false,   "ReleaseState": "P",   "IsTestUser": false,   "Status": "A"   }]]></con:value>
        </con:property>
        <con:property>
          <con:name>MomentId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="AddProfile" id="0939eeb7-a5b2-4be8-bef5-fc8d73d834eb">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>09d0b29f-fbfa-4136-9573-3b813c1795b3</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>ProfileId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="GetProfileSegments" id="a242d674-e4d9-42c1-8fb2-fee147d0ba03">
    <con:settings/>
    <con:config service="RestAPIs" resourcePath="/api/v1/profiles/{profileId}/segmentdata" methodName="GetProfileSegments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="GetProfileSegments" id="c6aa6cfa-ef43-4d92-98e6-d9e7dd974bf7" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>https://d3aldv-pveapi.skynetlowerenv.com/</con:endpoint>
        <con:request/>
        <con:originalUri>https://q3alin-pveapi.skynetlowerenv.com/api/v1/profiles/profileId/segmentdata</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="43fe5441-e65d-4c0f-babd-7ce7ffb08a00" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1ed535a6-77d8-494e-a717-bdec06c68465" name="JSONPath Match" disabled="true">
          <con:configuration>
            <path>$.SegmentData.[?(@.SegmentDataName== 'ATTRITION_SCORE')].SegmentDataName</path>
            <content>[ATTRITION_SCORE]</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="Authorization" value="OAuth ${#Project#AuthToken}"/>
          <con:entry key="profileId" value="${#[Profile#AddProfileRGR#AddProfileRGR]#Response#$['ProfileId']}"/>
          <con:entry key="content-type" value="application/json"/>
          <con:entry key="Accept-Language" value="en-US"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>profileId</con:entry>
          <con:entry>Accept-Language</con:entry>
          <con:entry>Authorization</con:entry>
          <con:entry>content-type</con:entry>
          <con:entry>segmentType</con:entry>
        </con:parameterOrder>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="calltestcase" name="DeactivateMoment" id="7750a86e-1b0c-4c0e-81c0-38d21a7ab168">
    <con:settings/>
    <con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:targetTestCase>c903534c-32ad-44dc-9cb6-a72fc8de1482</con:targetTestCase>
      <con:properties>
        <con:property>
          <con:name>MomentId</con:name>
        </con:property>
      </con:properties>
      <con:returnProperties/>
      <con:runMode>SINGLETON_AND_WAIT</con:runMode>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
</con:testCase>
